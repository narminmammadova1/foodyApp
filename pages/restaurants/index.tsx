import React, { useEffect, useState } from 'react'
import MainClient from '../../components/Client/MainClient'
import HeaderClient from '../../components/Client/HeaderClient'
import Head from 'next/head'
import SidebarClient from '../../components/Client/SidebarClient'
import RestaurantCards from '../../components/Client/RestaurantCards'
import FooterClient from '../../components/Client/FooterClient'
import { GetServerSideProps, NextPage } from 'next'
import { getRestaurant } from '../../services'
import { instanceAxios } from '../../helpers/instanceAxios'
import { useGlobalContext } from '../../Context/GlobalContext'
import { useRouter } from 'next/router'
import { RestProps } from '../../shared/interface'


const RestaurantsPage:NextPage = () => {
 ;
const {restaurantData,isLoading,categoryData,selectedId,}=useGlobalContext() || {}

console.log("restdaki restdata newwwwwwwww",restaurantData);


const [restData,setRestData]=useState<RestProps[]>([])

const [filteredRest,setFilteredRest]=useState<RestProps[]>([])
// if(isLoading){    return <div>Loading....................</div>
// }
// useEffect(() => {
//   if (restaurantData) {
//       setRestData(restaurantData);
//   }
// }, [restaurantData]);


// useEffect(() => {
//   if (selectedId) {
//     const filtered = restaurantData?.filter((restaurant) => restaurant.category_id === selectedId) || []
//     setFilteredRest(filtered)
//   } else {
//     setFilteredRest([])
//   }
// }, [selectedId,restaurantData])




useEffect(() => {
  if (restaurantData) {
    setRestData(restaurantData);

    
  }
}, [restaurantData]);


useEffect(()=>{

  if (selectedId) {
    const filtered = restaurantData?.filter((restaurant) => restaurant.category_id === selectedId) ;
    setFilteredRest(filtered || []);
  } else {
    setFilteredRest([]);
  }
},[selectedId])

if (isLoading ) {
  return <div>Loading....................</div>;
}

  return (
    <div>
   <Head>
    
   <title>Register|Desktop</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
    </Head>  
<MainClient>

    <HeaderClient/>

    <div className='flex mt-4'>
<SidebarClient categoryData={categoryData}/>

<div className='w-full flex flex-wrap gap-9 pt-2 ps-10'>
 
 {(selectedId ? filteredRest : restData)?.map((rest:RestProps) => (
              <RestaurantCards key={rest.id} rest={rest} 
              />
            ))}


    
</div>

</div>
</MainClient>
     <FooterClient/>
    </div>
  )
}













export default RestaurantsPage
